@import '../../abstracts/functions';
@import '../../abstracts/variables';
@import '../../abstracts/mixins';


/**************************** Flip Card Grid ****************************/
// Configuration
$config: (
  card: (
    height: $flip-card-height,
    mobile-height: 250px,
    image-height: 120px,
    transition: $flip-card-transition-time cubic-bezier(0.4, 0, 0.2, 1),
    radius: $border-radius-soft,
    shadow: $box-shadow,
    shadow-hover: 0 6px 12px rgba($color-neutral-10, 0.15)
  ),
  grid: (
    columns: (
      default: $grid-columns-standard,
      desktop: 3,
      tablet: 2,
      phone: 1
    ),
    gap: $grid-gap
  ),
  spacing: $space-base
);

// Base styles
%flex-col {
  display: flex;
  flex-direction: column;
}

%card-3d {
  backface-visibility: hidden;
  transform-style: preserve-3d;
}

%card-face {
  @extend %card-3d, %flex-col;
  position: absolute;
  inset: 0;
  background: $color-neutral-0;
  border-radius: map-get($config, card, radius);
  box-shadow: map-get($config, card, shadow);
  overflow: hidden;
  transition: transform map-get($config, card, transition);
}

// Component
.grid-flip-wrapper {
  width: 100%;

  // Grid
  .flip-card-list {
    display: grid;
    gap: map-get($config, grid, gap);
    grid-template-columns: repeat(map-get($config, grid, columns, default), 1fr);
    position: relative;

    @each $break, $cols in map-get($config, grid, columns) {
      @if $break != default {
        @include respond-to($break) {
          grid-template-columns: repeat($cols, 1fr);
          @if $break == phone { gap: map-get($config, spacing); }
        }
      }
    }
  }

  // Card Structure
  %base-card {
    width: 100%;
    height: 100%;
    min-height: map-get($config, card, height);

    @include respond-to(phone) {
      @extend %flex-col;
      height: auto;
      min-height: map-get($config, card, mobile-height);
    }
  }

  .flip-transition-wrapper,
  .flip-card,
  .flip-card-inner {
    @extend %base-card;
  }

  .perspective-container {
    @extend %card-3d;
    perspective: 1000px;
    transform: translateZ(0);
    @extend %base-card;

    &:hover {
      .flip-card-front,
      .flip-card-back {
        box-shadow: map-get($config, card, shadow-hover);
      }
    }
  }

  // Card Faces
  .flip-card-front,
  .flip-card-back {
    @extend %card-face;
  }

  .flip-card-inner {
    position: relative;
    transform-style: preserve-3d;

    &.flipped {
      transform: rotateY(180deg);

      .flip-card-back {
        pointer-events: auto;
        * { pointer-events: auto; }
      }
    }
  }

  .flip-card-back {
    transform: rotateY(180deg);
    pointer-events: none;

    a, button, .btn {
      cursor: pointer;
      pointer-events: auto !important;
      position: relative;
    }
  }

  // Content
  img {
    width: 100%;
    height: map-get($config, card, image-height);
    object-fit: cover;
    flex-shrink: 0;
  }

  .flip-card-content {
    @extend %flex-col;
    flex: 1;
    padding: map-get($config, spacing);

    @include respond-to(phone) {
      padding-bottom: calc(1rem + 48px);

      .content-text-title,
      .content-text-light {
        display: -webkit-box;
        -webkit-line-clamp: var(--lines, 2);
        -webkit-box-orient: vertical;
        overflow: hidden;
        line-height: 1.2;
        margin: 0;
      }

      .content-text-title {
        --lines: 3;
      }
    }
  }

  // Controls
  .flip-button-container {
    display: none;
    pointer-events: auto;

    @include respond-to(tablet-h) {
      display: block;
      position: absolute;
      inset: auto map-get($config, spacing) map-get($config, spacing);
    }
  }

  .flip-button {
    font-weight: $font-weight-bold;
    cursor: pointer;
  }
}

// States
.grid-flip-wrapper {
  &.is-loading {
    opacity: $opacity-m;
    pointer-events: none;
  }

  &.has-error .flip-card-front,
  &.has-error .flip-card-back {
    border: $border-width $border-style $color-danger;
  }

  &:focus-within {
    outline: 2px solid $color-primary;
    outline-offset: 2px;
  }
}

// Print styles
@media print {
  .grid-flip-wrapper {
    .flip-card-back { 
      display: none; 
    }
    .flip-card-inner { 
      transform: none !important; 
    }
  }
}

// Reduced motion
@media (prefers-reduced-motion: reduce) {
  .grid-flip-wrapper [class*='flip-'] {
    transition-duration: 0.3s;
  }
}